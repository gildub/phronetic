oauthConfig:
  assetPublicURL: https://openshift.gildub2.lab.pnq2.cee.redhat.com/console/
  grantConfig:
    method: auto
  identityProviders:
  - name: my_remote_basic_auth_provider
    challenge: true
    login: true
    mappingMethod: claim
    provider:
      apiVersion: v1
      kind: BasicAuthPasswordIdentityProvider
      url: https://www.example.com/
      ca: ca.file
      certFile: client.crt
      keyFile: client.key
  - name: github123456789
    challenge: false
    login: true
    mappingMethod: claim
    provider:
      apiVersion: v1
      kind: GitHubIdentityProvider
      ca: github.crt
      clientID: 2d85ea3f45d6777bffd7
      clientSecret: fake-secret
      hostname: test.example.com
      organizations:
      - myorganization1
      - myorganization2
      teams:
      - myorganization1/team-a
      - myorganization2/team-b
  - name: gitlab123456789
    challenge: true
    login: true
    mappingMethod: claim
    provider:
      apiVersion: v1
      kind: GitLabIdentityProvider
      legacy: true
      url: https://gitlab.com/
      ca: gitlab.crt
      clientID: fake-id
      clientSecret: fake-secret
  - name: google123456789123456789
    challenge: false
    login: true
    mappingMethod: claim
    provider:
      apiVersion: v1
      kind: GoogleIdentityProvider
      clientID: 82342890327-tf5lqn4eikdf4cb4edfm85jiqotvurpq.apps.googleusercontent.com
      clientSecret: fake-secret
      hostedDomain: test.example.com
  - name: htpasswd_auth
    login: true
    mappingMethod: claim
    challenge: true
    provider:
      apiVersion: v1
      file: /etc/origin/master/htpasswd
      kind: HTPasswdPasswordIdentityProvider
  - name: my_keystone_provider
    challenge: true
    login: true
    mappingMethod: claim
    provider:
      apiVersion: v1
      kind: KeystonePasswordIdentityProvider
      domainName: default
      url: http://fake.url:5000
      ca: keystone.pem
      certFile: clientcert.pem
      keyFile: clientkey.pem
      useKeystoneIdentity: false
  - name: "my_ldap_provider"
    challenge: true
    login: true
    mappingMethod: claim
    provider:
      apiVersion: v1
      kind: LDAPPasswordIdentityProvider
      attributes:
        id:
        - dn
        email:
        - mail
        name:
        - cn
        preferredUsername:
        - uid
      bindDN: "123"
      bindPassword: "321"
      ca: my-ldap-ca-bundle.crt
      insecure: false
      url: "ldap://ldap.example.com/ou=users,dc=acme,dc=com?uid"
  - name: my_request_header_provider
    challenge: true
    login: true
    mappingMethod: claim
    provider:
      apiVersion: v1
      kind: RequestHeaderIdentityProvider
      challengeURL: "https://example.com"
      loginURL: "https://example.com"
      clientCA: "cert.crt"
      clientCommonNames:
      - my-auth-proxy
      headers:
      - X-Remote-User
      - SSO-User
      emailHeaders:
      - X-Remote-User-Email
      nameHeaders:
      - X-Remote-User-Display-Name
      preferredUsernameHeaders:
      - X-Remote-User-Login
  - name: my_openid_connect
    challenge: false
    login: true
    mappingMethod: claim
    provider:
      apiVersion: v1
      kind: OpenIDIdentityProvider
      clientID: testid
      clientSecret: testsecret
      ca: my-openid-ca-bundle.crt
      extraScopes:
      - email
      - profile
      extraAuthorizeParameters:
        include_granted_scopes: "true"
      claims:
        id:
        - custom_id_claim
        - sub
        preferredUsername:
        - preferred_username
        - email
        name:
        - nickname
        - given_name
        - name
        email:
        - custom_email_claim
        - email
      urls:
        authorize: https://myidp.example.com/oauth2/authorize
        token: https://myidp.example.com/oauth2/token
        userInfo: https://myidp.example.com/oauth2/userinfo
  templates:
    error: testerror
    login: testlogin
    providerSelection: testselection
  masterCA: ca-bundle.crt
  masterPublicURL: https://openshift.gildub2.lab.pnq2.cee.redhat.com:443
  masterURL: https://openshift.internal.gildub2.lab.pnq2.cee.redhat.com:443
  sessionConfig:
    sessionMaxAgeSeconds: 3600
    sessionName: ssn
    sessionSecretsFile: /etc/origin/master/session-secrets.yaml
  tokenConfig:
    accessTokenMaxAgeSeconds: 86400
    authorizeTokenMaxAgeSeconds: 500
